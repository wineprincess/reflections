When would you want to use a remote repository rather than keeping all your work
local?

--When you are collaborating with a team or when you are working from multiple computers.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

--You might want to pull changes manually because you want control over exactly what has changed, and new features showing up unexpectedly would mess up your workflow.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

--A clone is its own entity (even if it was copied), and can be local or remote. A fork references the creator of its early stages, and exists only on Github. A branch is for project features that haven't yet been incorporated into master.

What is the benefit of having a copy of the last known state of the remote
stored locally?

--This saves you from having unnecessary parents, allowing a simpler fast-forward merge when appropriate.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

--With GitHub, there is a pull request process that gatekeeps merge requests. Without GitHub, there might be more emails or texts or slack messages or (heaven forbid) phone calls required between devs to get changes merged. I'm not sure anything would be easier without GitHub!

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

--Making changes in a separate branch is good if you are collaborating on a new feature that is not ready to be merged into master. Directly making changed in master is probably better for solo projects. Benefits of a separate branch with merged pull requests are documentation among team members. More simply, using a separate branch is good for a feature that isn't ready for master.