What happens when you initialize a repository? Why do you need to do it?


When you initialize a repository, git creates a .git directory in order to track changes.  There are some files in there, but I'm not sure what they are called. I believe you are then on the master branch, but that there are zero commits and some kind of error message about the head.



How is the staging area different from the working directory and the repository?

It's like a scratch pad.  you have a chance to get organized and monitor your organization (using git status) prior to actually committing.

What value do you think it offers?
I think it makes better commit messages and gives you a chance to correct mistakes. Also enables you to intelligently group different files for a single commit.


How can you use the staging area to make sure you have one commit per logical
change?

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?